# pipeline suggested name: CI pull requests
# validate the pull requests

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr:
  branches:
    include:
      - develop
  paths:
    exclude:
      - .azure-pipelines/*
      - .vscode/*
      - docs/*
      - tools/*

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: check_format
    displayName: nx format:check
    steps:
      - template: ../templates/steps_install-node-modules.yml
      - script: |
          npx nx format:check --base=origin/develop --head=origin/$(Build.SourceBranchName)
        displayName: running check
  - job: initial_setup
    displayName: nx calculate commandas
    steps:
      - template: ../templates/steps_install-node-modules.yml
      - script: |
          echo "##vso[task.setvariable variable=COMMANDS;isOutput=true]$(node ./tools/scripts/nx-calculate-commands.js $(SourceBranchName))"
        name: setCommands
      - script: echo $(setCommands.COMMANDS)
        name: echoCommands

  - job: lint
    displayName: lint projects
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(
          contains(
            dependencies.initial_setup.outputs['setCommands.COMMANDS'],
            '"lint":[]'
          )
        )
      )
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - template: ../templates/steps_install-node-modules.yml
      - script: node ./tools/scripts/nx-run-many.js '$(COMMANDS)' lint
        displayName: running lint

  - job: test
    displayName: test projects
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(
          contains(
            dependencies.initial_setup.outputs['setCommands.COMMANDS'],
            '"test":[]'
          )
        )
      )
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - template: ../templates/steps_install-node-modules.yml
      - script: node ./tools/scripts/nx-run-many.js '$(COMMANDS)' test
        displayName: running tests

  - job: build
    displayName: build projects
    dependsOn: initial_setup
    condition: |
      and(
        succeeded(),
        not(
          contains(
            dependencies.initial_setup.outputs['setCommands.COMMANDS'],
            '"build":[]'
          )
        )
      )
    variables:
      COMMANDS: $[ dependencies.initial_setup.outputs['setCommands.COMMANDS'] ]
    steps:
      - template: ../templates/steps_install-node-modules.yml
      - script: node ./tools/scripts/nx-run-many.js '$(COMMANDS)' build
        displayName: running builds
