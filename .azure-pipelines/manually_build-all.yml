# pipeline suggested name: MANUALLY build apps
# for master or develop branch

name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    ENV: 'prod'
  ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
      ENV: 'dev'
    ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/develop') }}:
      ENV: 'feat'

stages:
  - stage: build
    condition: ne(variables['ENV'], 'feat')
    jobs:
      - job: build_all
        displayName: nx build all apps
        steps:
          - template: templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/nx-build-all.js $(ENV)
            displayName: nx build all apps
            failOnStderr: true
          - publish: $(System.DefaultWorkingDirectory)/dist/apps
            artifact: apps

  - stage: git_push
    displayName: git push
    dependsOn: build
    condition: succeeded()
    jobs:
      - job: push_all
        displayName: push the builded apps
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - script: echo $(Pipeline.Resources.current)
          - download: current
            artifact: apps
          - script: |
              cd $(Pipeline.Workspace)/apps
              ls
            displayName: list apps available on $(Pipeline.Workspace)/apps
          - template: templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/git-push-builds-to-branches.js $(Pipeline.Workspace)/apps $(ENV)
            displayName: running git push
            failOnStderr: true
