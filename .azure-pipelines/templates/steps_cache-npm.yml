# Pipeline caching
# https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching
#
parameters:
  - name: npmConfigCache
    type: string
    default: '$(Pipeline.Workspace)/.npm'

steps:
  - script: |
      echo $(Build.BuildNumber)
      npm config get cache
      npm config set cache ${{ parameters.npmConfigCache }} --global
      npm config get cache
    displayName: set npm cache directory
  
  # - task: Cache@2
  - task: CacheBeta@1
    inputs:
      key: 'npm | "$(Agent.OS)" | "$(Build.BuildNumber)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)" | "$(Build.BuildNumber)"
      path: node_modules
      cacheHitVar: CACHE_RESTORED
    displayName: Cache node_modules

  # - task: Cache@2
  - task: CacheBeta@1
    condition: ne(variables.CACHE_RESTORED, 'true')
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: ${{ parameters.npmConfigCache }}
    displayName: Cache npm

  - script: npm ci
    condition: ne(variables.CACHE_RESTORED, 'true')
    displayName: Install dependencies only if there is no cache available
