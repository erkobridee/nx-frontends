parameters:
  - name: appName
    type: string
    default: ''

stages:
  - stage: validate_build
    displayName: validate and build
    condition: ne(variables['ENV'], 'feat')
    jobs:
      - job: lint_one
        displayName: nx lint ${{parameters.appName}}
        steps:
          - template: ../../templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/nx-run-one.js ${{parameters.appName}} lint
            displayName: running lint

      - job: test_one
        displayName: nx test ${{parameters.appName}}
        steps:
          - template: ../../templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/nx-run-one.js ${{parameters.appName}} test
            displayName: running test

      - job: build_one
        displayName: nx build ${{parameters.appName}}
        dependsOn:
          - lint_one
          - test_one
        condition: |
          and(
            succeeded('lint_one'),
            succeeded('test_one')
          )
        steps:
          - template: ../../templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/nx-run-one.js ${{parameters.appName}} build $(ENV)
            displayName: running build
          - publish: $(System.DefaultWorkingDirectory)/dist/apps
            artifact: apps

  - stage: git_push
    displayName: git push
    dependsOn: validate_build
    condition: succeeded()
    jobs:
      - job: push_all
        displayName: push the builded ${{parameters.appName}}
        steps:
          - checkout: self
            persistCredentials: true
            clean: true
          - download: current
            artifact: apps
          - script: |
              cd $(Pipeline.Workspace)/apps
              ls
            displayName: list apps available on $(Pipeline.Workspace)/apps
          - template: ../../templates/steps_install-node-modules.yml
          - script: node ./tools/scripts/git-push-builds-to-branches.js $(Pipeline.Workspace)/apps $(ENV)
            displayName: running git push
